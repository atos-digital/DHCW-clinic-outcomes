package pages

import (
	"github.com/atos-digital/DHCW-clinic-outcomes/ui"
	"github.com/atos-digital/DHCW-clinic-outcomes/ui/components"
)

var DefaultOutcomes = ui.Index(Outcomes())

templ SectionTitle(title string) {
	<h1 class="text-lg font-semibold bg-sky-800 text-white px-4 py-1">
		{ title }
	</h1>
}

templ Outcomes() {
	<div class="flex flex-col gap-4">
		@OutcomesEventDetails()
		@OutcomesOptions()
		@OutcomesFollowUp()
		<div class="px-4">
			@components.LabelledTextArea(components.DefaultLabel("Other information"), "Add any other relevant information such as any outpatient procedures taken, or details of any tests required before next appointment.")
		</div>
	</div>
}

var consultationTypes = []string{
	"Telephone Consultation",
	"Video Consultation",
	"Face-to-face",
	"Office-based Decision",
}

var specialties = []string{
	"Cardiology",
	"Dermatology",
	"Endocrinology",
	"Gastroenterology",
	"Geriatrics",
	"Hematology",
	"Infectious Disease",
	"Nephrology",
	"Neurology",
	"Oncology",
	"Pulmonology",
	"Rheumatology",
	"Urology",
}

var clinicians = []string{"A", "B", "C"}

templ OutcomesEventDetails() {
	@SectionTitle("Enter Event Details")
	<div class="flex justify-between px-4">
		<div class="flex flex-col">
			<label for="consultation-date">Date</label>
			<input type="date" name="consultation-date" class="border-gray-300 border rounded"/>
		</div>
		<div class="flex flex-col">
			<label for="consultation-time">Time</label>
			<input type="time" name="consultation-time" class="border-gray-300 border rounded"/>
		</div>
		@components.LabelledDropdown(components.DefaultLabel("Consultation Type"), consultationTypes)
		@components.LabelledDropdown(components.DefaultLabel("Specialty"), specialties)
		@components.LabelledDropdown(components.DefaultLabel("Senior Responsible Clinician"), clinicians)
	</div>
}

templ OutcomesOptions() {
	<div
		id="outcomes-options"
		hx-get="/hx/outcomes-options-radio"
		hx-trigger="change from:input[name='outcomes-option']"
		hx-include="#outcomes-options"
		hx-swap="outerHTML"
		class="flex flex-col gap-2"
	>
		@SectionTitle("Outcomes")
		<div class="flex flex-col px-4">
			@components.CheckboxGroup("cancer-pathway",[]components.LabelOpts{components.DefaultLabel("Cancer Pathway")})
			<div class="flex flex-col ml-4 my-1">
				@components.RadioGroupWithTextbox("cancer-pathway", []components.LabelOpts{components.DefaultLabel("First Suspicion of Cancer"), components.DefaultLabel("Patient to remain on USC pathway"), components.DefaultLabel("Other")}, map[string]string{"Other": "Specify"})
			</div>
		</div>
		<hr/>
		<div class="flex flex-col gap-6 px-4">
			<div class="grid grid-cols-2">
				<div class="flex flex-col">
					@OutcomesOptionsRadioGroup("","outcomes-option", []OutcomesOptionsRadio{
				{"Patient Discharged",nil},
				{"See on Symptom",components.Dropdown([]string{"6 months", "12 months"})},
				{"Patient Initiated Follow Up",nil}})
				</div>
				<div class="flex flex-col">
					@OutcomesOptionsRadioGroup("","outcomes-option", []OutcomesOptionsRadio{
				{"Did Not Answer",components.RadioGroup("did-not-answer", []components.LabelOpts{components.DefaultLabel("Send for again"), components.DefaultLabel("Discharge")})},
				{"Did Not Attend",components.RadioGroup("did-not-attend", []components.LabelOpts{components.DefaultLabel("Send for again"), components.DefaultLabel("Discharge")})},
				{"Could Not Attend",components.RadioGroup("could-not-attend", []components.LabelOpts{components.DefaultLabel("Send for again"), components.DefaultLabel("Discharge")})}})
				</div>
			</div>
			<div class="flex flex-col">
				@OutcomesOptionsRadioGroup("","outcomes-option", []OutcomesOptionsRadio{
				{"Refer to Diagnostics",components.TextInput("Enter Diagnostic Test(s)")},
				{"Refer to another consultant / specialty",components.TextInput("Type in which consultant or specialty")},
				{"Refer to Therapies",components.TextInput("Type who to refer to")},
				{"Refer to Treatment",components.CheckboxGroup("refer-to-treatment",[]components.LabelOpts{components.DefaultLabel("SACT"),components.DefaultLabel("Radiotherapy"),components.DefaultLabel("Other")})}})
			</div>
			<div class="flex flex-col">
				@OutcomesOptionsRadioGroup("","outcomes-option", []OutcomesOptionsRadio{
				{"Add to Daycare List",nil},
				{"Add to Inpatient List",nil},
				{"Awaiting Clinical Decision (i.e. MDT, test results)",nil},
				{"Discuss at MDT",components.TextInput("Which MDT (if known)?")},
				{"Listed for Outpatient Procedure",components.TextInput("Type in which procedure")}})
			</div>
			<div class="flex flex-col">
				@OutcomesOptionsRadioGroup("","outcomes-option", []OutcomesOptionsRadio{
				{"Admit from Clinic / Consultation",nil}})
			</div>
		</div>
	</div>
}

templ OutcomesFollowUp() {
	<div class="flex flex-col px-4 gap-2">
		@components.CheckboxGroup("follow-up", []components.LabelOpts{{"Follow Up", true, "hi", true}})
		<div class="border border-black p-4">
			@components.RadioGroupWithTextbox("same-clinician", []components.LabelOpts{components.DefaultLabel("Yes"), components.DefaultLabel("No")}, map[string]string{"No": "Specify"})
		</div>
	</div>
}

type OutcomesOptionsRadio struct {
	label    string
	followUp templ.Component
}

templ OutcomesOptionsRadioGroup(label, groupName string, options []OutcomesOptionsRadio) {
	<div>
		for _, option := range options {
			<label>
				<input
					_={ "on input toggle .hidden on next <div/>" }
					type="radio"
					name={ groupName }
					value={ option.label }
					if components.IsChecked(ctx, groupName, option.label) {
						checked
					}
				/>
				{ option.label }
			</label>
			<div class="">
				if option.followUp != nil && components.IsChecked(ctx, groupName, option.label) {
					<div class="ml-4 my-1">
						@option.followUp
					</div>
				}
			</div>
		}
	</div>
}
